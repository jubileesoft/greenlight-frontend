trigger:
  - develop
  - master
  - alpha

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: Yarn@3
    displayName: 'Install Packages'

  - script: 'yarn run build --environment=production'
    displayName: 'Build PROD'
    env:
      target: 'prod'
      API_URI: $(API_URI)
      MICROSOFT_CLIENT_ID: $(MICROSOFT_CLIENT_ID)
      MICROSOFT_TENANT_ID: $(MICROSOFT_TENANT_ID)
      GOOGLE_API_KEY: $(GOOGLE_API_KEY)
      GOOGLE_REDIRECT_URI: $(GOOGLE_REDIRECT_URI)
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - script: 'yarn run build-dev'
    displayName: 'Build DEV'
    env:
      target: 'dev'
      API_URI: $(API_URI)
      MICROSOFT_CLIENT_ID: $(MICROSOFT_CLIENT_ID)
      MICROSOFT_TENANT_ID: $(MICROSOFT_TENANT_ID)
      GOOGLE_API_KEY: $(GOOGLE_API_KEY)
      GOOGLE_REDIRECT_URI: $(GOOGLE_REDIRECT_URI)
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/alpha'))

  - task: ArchiveFiles@2
    displayName: 'Zip dist folder'
    inputs:
      rootFolderOrFile: 'dist'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/dist.zip'
      replaceExistingArchive: true
    condition: succeeded()

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/dist.zip'
      artifact: 'zip-artifact'
      publishLocation: 'pipeline'
    condition: succeeded()
